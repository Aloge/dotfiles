#
# Theme by Sorin Ionescu (MIT LICENSE)
# 

#
# Glossary
#

# git
# %b => current branch
# %a => current action (rebase/merge)

# prompt
# %F => color dict
# %f => reset color
# %~ => current path with var substitutions
# %d => current path without var substitutions
# %* => time
# %n => username
# %m => shortname host
# %(?..) => prompt conditional - %(condition.true.false)

# terminal
# \e7   => save cursor position
# \e[2A => move cursor 2 lines up
# \e[1G => go to position 1 in terminal
# \e8   => restore cursor position
# \e[K  => clears everything after the cursor on the current line
# \e[2K => clear everything on the current line

# colors
#  0 => black
#  1 => red
#  2 => green
#  3 => yellow
#  4 => blue
#  5 => magenta
#  6 => cyan
#  7 => white
#  8 => bright black
#  9 => bright red
# 10 => bright green
# 11 => bright yellow
# 12 => bright blue
# 13 => bright magenta
# 14 => bright cyan
# 15 => bright white

# Load dependencies.
pmodload 'helper'

function prompt_custom_pwd {
  local pwd="${PWD/#$HOME/~}"

  if [[ "$pwd" == (#m)[/~] ]]; then
    _prompt_custom_pwd="$MATCH"
    unset MATCH
  else
    _prompt_custom_pwd="${${${${(@j:/:M)${(@s:/:)pwd}##.#?}:h}%/}//\%/%%}/${${pwd:t}//\%/%%}"
  fi
}

function prompt_custom_git_info {
  if (( _prompt_custom_precmd_async_pid > 0 )); then
    # Append Git status.
    if [[ -s "$_prompt_custom_precmd_async_data" ]]; then
      alias typeset='typeset -g'
      source "$_prompt_custom_precmd_async_data"
      RPROMPT+='${git_info:+${(e)git_info[status]}}'
      unalias typeset
    fi

    # Reset PID.
    _prompt_custom_precmd_async_pid=0

    # Redisplay prompt.
    zle && zle reset-prompt
  fi
}

function prompt_custom_precmd_async {
  # Get Git repository information.
  if (( $+functions[git-info] )); then
    git-info
    typeset -p git_info >! "$_prompt_custom_precmd_async_data"
  fi

  # Signal completion to parent process.
  kill -WINCH $$
}

function prompt_custom_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  # Format PWD.
  prompt_custom_pwd

  # Define prompts.
  RPROMPT='${editor_info[overwrite]}%(?:: %F{1} ⏎ %f)${VIM:+" %B%F{6}V%f%b"}'

  # Kill the old process of slow commands if it is still running.
  if (( _prompt_custom_precmd_async_pid > 0 )); then
    kill -KILL "$_prompt_custom_precmd_async_pid" &>/dev/null
  fi

  # Compute slow commands in the background.
  trap prompt_custom_git_info WINCH
  prompt_custom_precmd_async &!
  _prompt_custom_precmd_async_pid=$!
}

function prompt_custom_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)
  _prompt_custom_precmd_async_pid=0
  _prompt_custom_precmd_async_data="${TMPPREFIX}-prompt_custom_data"

  # Load required functions.
  autoload -Uz add-zsh-hook

  # Add hook for calling git-info before each command.
  add-zsh-hook precmd prompt_custom_precmd

  # Set editor-info parameters.
  zstyle ':zsh:module:editor:info:completing' format '%B%F{7}...%f%b'
  zstyle ':zsh:module:editor:info:keymap:primary' format ' %B%F{49}❯%f%b'
  zstyle ':zsh:module:editor:info:keymap:primary:overwrite' format ' %F{3}♺%f'
  zstyle ':zsh:module:editor:info:keymap:alternate' format ' %B%F{2}❮%F{3}❮%F{1}❮%f%b'

  # Set git-info parameters.
  zstyle ':zsh:module:git:info' verbose 'yes'
  zstyle ':zsh:module:git:info:action' format '%F{7}:%f%%B%F{9}%s%f%%b'
  zstyle ':zsh:module:git:info:added' format ' %%B%F{2}✚%f%%b'
  zstyle ':zsh:module:git:info:ahead' format ' %%B%F{13}⬆%f%%b'
  zstyle ':zsh:module:git:info:behind' format ' %%B%F{13}⬇%f%%b'
  zstyle ':zsh:module:git:info:branch' format ' %%B%F{2}%b%f%%b'
  zstyle ':zsh:module:git:info:commit' format ' %%B%F{3}%.7c%f%%b'
  zstyle ':zsh:module:git:info:deleted' format ' %%B%F{1}✖%f%%b'
  zstyle ':zsh:module:git:info:modified' format ' %%B%F{4}✱%f%%b'
  zstyle ':zsh:module:git:info:position' format ' %%B%F{13}%p%f%%b'
  zstyle ':zsh:module:git:info:renamed' format ' %%B%F{5}➜%f%%b'
  zstyle ':zsh:module:git:info:stashed' format ' %%B%F{6}✭%f%%b'
  zstyle ':zsh:module:git:info:unmerged' format ' %%B%F{3}═%f%%b'
  zstyle ':zsh:module:git:info:untracked' format ' %%B%F{7}◼%f%%b'
  zstyle ':zsh:module:git:info:keys' format \
    'status' '$(coalesce "%b" "%p" "%c")%s%A%B%S%a%d%m%r%U%u'

  # Define prompts.
  PROMPT='${SSH_TTY:+"%F{9}%n%f%F{7}@%f%F{3}%m%f "}%F{4}${_prompt_custom_pwd}%(!. %B%F{1}#%f%b.)${editor_info[keymap]} '
  RPROMPT=''
  SPROMPT='zsh: correct %F{1}%R%f to %F{2}%r%f [nyae]? '
}

function prompt_custom_preview {
  local +h PROMPT=''
  local +h RPROMPT=''
  local +h SPROMPT=''

  editor-info 2>/dev/null
  prompt_preview_theme 'custom'
}

prompt_custom_setup "$@"
