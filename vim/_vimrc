version 7.0

" General settings
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Disable Vi compatibility, must be at top
set nocompatible

" Use UTF-8 without BOM
set encoding=utf8 nobomb

" Use zshell instead of bash
set shell=/bin/zsh

" Disable error bells
set noerrorbells

" Don’t show the intro message when starting Vim
set shortmess=atI

" Behaviour settings
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Reload file in Vim if it has been changed outside
set autoread

" Use the OS clipboard by default (on versions with `+clipboard`)
set clipboard+=unnamed

" Start scrolling three lines before the horizontal window border
set scrolloff=3

" Highlight searches dynamically as pattern is typed
set hlsearch
set incsearch

" Ignore case except if search has uppercase
set ignorecase
set smartcase

" Set max text width
set textwidth=80

" Use 2 spaces for indent and
set tabstop=2
set shiftwidth=2
set expandtab

" Use backspace for all
set backspace=indent,eol,start

" Indentation
set autoindent
set smartindent

" Add the g flag to search/replace by default
set gdefault
"
" Set commands autocompletion and longest selection
set wildmenu
set wildmode=longest:full,full

" Ignore this files
set wildignore=*.swp,*.bak,*.pyc,*.pyo,*.class,*.tmp,*~

set complete=.,w,t

" Show tab and trailing whitespace
set list listchars=tab:..,trail:·

" Don’t add empty newlines at the end of files
set noeol

" Uncomment this to enable binary files edition in Vim
" set binary

" UI settings
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Enable syntax highlighting and use custom color scheme
syntax enable
set term=xterm-256color
colorscheme scheme

" Show line number
set number

" Show the filename in the window titlebar
set title

" Display file and cursor position
set ruler

" Always show status line
set laststatus=2

" Don't show 'Thanks for flying with Vim' message
set title
set titleold=""
set titlestring=VIM:\ %F

" Vim directories
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Save swp files to a less annoying place than the current directory.
set directory=~/.vim/swaps//

" Save backups to a less annoying place than the current directory.
set backupdir=~/.vim/backups/
set backup

" Keybindings
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
map <F5> :setlocal spell! spelllang=en_us<CR>
map <C-s> <esc>:w<CR>
imap <C-s> <esc>:w<CR>

" Vim-Plug
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

call plug#begin('~/.vim/plugged')

" Auto-completion and snippet solution
Plug 'Shougo/neocomplete.vim'
Plug 'Shougo/neosnippet.vim'
Plug 'Shougo/context_filetype.vim'

" Ctrlp utility like sublime text
Plug 'kien/ctrlp.vim'

" Insert or delete brackets, parens, quotes in pair
Plug 'jiangmiao/auto-pairs'

" Display an indent line
Plug 'Yggdroot/indentLine'
let g:indentLine_char = "⋮"
let g:indentLine_noConcealCursor = 1

" ds/cs/ys for deleting or changing surrounding chars
Plug 'tpope/vim-surround'

" Enable Sublime's multiple cursors feature
Plug 'terryma/vim-multiple-cursors'

" Improve status line  style
Plug 'bling/vim-airline'

" Syntax plugins
Plug 'cakebaker/scss-syntax.vim'
Plug 'fatih/vim-go'
Plug 'pangloss/vim-javascript'
Plug 'briancollins/vim-jst'
Plug 'plasticboy/vim-markdown'
Plug 'sophacles/vim-processing'

call plug#end()

" Neocomplete and neosnippet
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Disable AutoComplPop in vim and enable neocomplete instead
let g:acp_enableAtStartup = 0
let g:neocomplete#enable_at_startup = 1

" Enable smartcase and camelcase autocompletion
let g:neocomplete#enable_smart_case = 1
let g:neocomplete#enable_camel_case = 1

" Change max keyword width in chars (default is 80)
let g:neocomplete#max_keyword_width = 70

" Set minimum syntax keyword length.
let g:neocomplete#auto_completion_start_length = 3

" Enable auto-select first candidate automatically (like AutoComplPop)
let g:neocomplete#enable_auto_select = 1

" Disable default snippets in neosnippet
let g:neosnippet#disable_runtime_snippets = { '_' : 1 }

" Enable the preview window feature in neocomplete for neosnippets
" let g:neosnippet#enable_preview = 1

" Set snippets directory for neosnippets
let g:neosnippet#snippets_directory = "$HOME/.vim/snippets/"

" SuperTab like snippets behavior.
imap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: pumvisible() ? "\<C-n>" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: "\<TAB>"

" For snippet_complete marker.
if has('conceal')
  set conceallevel=2 concealcursor=i
endif
